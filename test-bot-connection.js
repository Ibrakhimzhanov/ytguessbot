// –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram –±–æ—Ç—É
require('dotenv').config()

const { Telegraf } = require('telegraf')

async function testBotConnection() {
  console.log('ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram –±–æ—Ç—É...\n')
  
  const bot = new Telegraf(process.env.BOT_TOKEN)
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    const botInfo = await bot.telegram.getMe()
    
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–æ—Ç—É —É—Å–ø–µ—à–Ω–æ!')
    console.log(`üìã –ò–º—è –±–æ—Ç–∞: ${botInfo.first_name}`)
    console.log(`üîó Username: @${botInfo.username}`) 
    console.log(`üÜî Bot ID: ${botInfo.id}`)
    console.log(`ü§ñ –≠—Ç–æ –±–æ—Ç: ${botInfo.is_bot ? '–î–∞' : '–ù–µ—Ç'}`)
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º webhook —Å—Ç–∞—Ç—É—Å
    try {
      const webhookInfo = await bot.telegram.getWebhookInfo()
      console.log(`\nüåê Webhook URL: ${webhookInfo.url || '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}`)
      console.log(`üìä Pending updates: ${webhookInfo.pending_update_count}`)
    } catch (webhookError) {
      console.log('\n‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook:', webhookError.message)
    }
    
    console.log('\nüéâ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!')
    console.log(`üí¨ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É —Å–æ–æ–±—â–µ–Ω–∏–µ: https://t.me/${botInfo.username}`)
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–æ—Ç—É:')
    if (error.response && error.response.error_code === 401) {
      console.error('üîë –ù–µ–≤–µ—Ä–Ω—ã–π BOT_TOKEN. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω –≤ .env —Ñ–∞–π–ª–µ.')
      console.error('üìã –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω: https://t.me/BotFather')
    } else {
      console.error('üìÑ –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.message)
    }
  }
}

testBotConnection()
