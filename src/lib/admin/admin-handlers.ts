import dotenv from 'dotenv'
dotenv.config()

import { Markup } from 'telegraf'
import { BotContext } from '../telegram'
import { hasAdminAccess, getRoleText } from './roles'
import { generateUsersXLSX, getXLSXFilename } from './export-xlsx'

/**
 * Middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –ø—Ä–∞–≤
 */
export async function adminMiddleware(ctx: BotContext, next: () => Promise<void>) {
  const telegramId = ctx.from?.id
  
  if (!telegramId || !hasAdminAccess(telegramId)) {
    await ctx.reply('‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.')
    return
  }
  
  return next()
}

/**
 * –ü–æ–∫–∞–∑–∞—Ç—å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
 */
export async function showAdminPanel(ctx: BotContext) {
  const telegramId = ctx.from?.id
  if (!telegramId) return
  
  const role = getRoleText(telegramId)
  
  const keyboard = Markup.keyboard([
    ['üóÇ –≠–∫—Å–ø–æ—Ä—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤', 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'],
    ['üîô –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']
  ]).resize()
  
  await ctx.reply(
    `üîß –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å\n\n` +
    `üë§ –í–∞—à–∞ —Ä–æ–ª—å: ${role}\n\n` +
    `–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:`,
    keyboard
  )
}

/**
 * –≠–∫—Å–ø–æ—Ä—Ç XLSX
 */
export async function handleExportXLSX(ctx: BotContext) {
  try {
    await ctx.reply('‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é XLSX —Ñ–∞–π–ª...')
    
    const buffer = await generateUsersXLSX()
    const filename = getXLSXFilename()
    
    await ctx.replyWithDocument(
      { source: buffer, filename },
      { caption: 'üìä –≠–∫—Å–ø–æ—Ä—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∫—É—Ä—Å–∞' }
    )
    
    console.log(`‚úÖ XLSX —ç–∫—Å–ø–æ—Ä—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω: ${filename}`)
  } catch (error) {
    console.error('‚ùå Error exporting XLSX:', error)
    await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ñ–∞–π–ª–∞')
  }
}
