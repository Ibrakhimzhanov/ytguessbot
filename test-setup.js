// –¢–µ—Å—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ–∫—Ä—É–∂–µ–Ω–∏—è...\n')

// –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
console.log('üìã Node.js –≤–µ—Ä—Å–∏—è:', process.version)

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
require('dotenv').config()

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
const requiredVars = [
  'BOT_TOKEN',
  'ADMIN_IDS', 
  'DATABASE_URL',
  'COURSE_PRICE_TIYN'
]

console.log('üîß –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:')
requiredVars.forEach(varName => {
  const value = process.env[varName]
  const status = value ? '‚úÖ' : '‚ùå'
  const displayValue = value 
    ? (varName === 'BOT_TOKEN' ? '*'.repeat(10) + value.slice(-10) : value)
    : '–ù–ï –ó–ê–î–ê–ù–ê'
  
  console.log(`${status} ${varName}: ${displayValue}`)
})

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
console.log('\nüóÑÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...')
try {
  if (process.env.DATABASE_URL) {
    const url = new URL(process.env.DATABASE_URL)
    console.log(`‚úÖ URL –±–∞–∑—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π: ${url.protocol}//${url.hostname}:${url.port}${url.pathname}`)
  } else {
    console.log('‚ùå DATABASE_URL –Ω–µ –∑–∞–¥–∞–Ω')
  }
} catch (error) {
  console.log('‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π DATABASE_URL:', error.message)
}

console.log('\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:')
console.log('1. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ .env —Ñ–∞–π–ª–µ')
console.log('2. –°–æ–∑–¥–∞–π—Ç–µ PostgreSQL –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö')  
console.log('3. –ü–æ–ª—É—á–∏—Ç–µ BOT_TOKEN –æ—Ç @BotFather')
console.log('4. –ü–æ–ª—É—á–∏—Ç–µ —Å–≤–æ–π ADMIN_ID –æ—Ç @userinfobot')
